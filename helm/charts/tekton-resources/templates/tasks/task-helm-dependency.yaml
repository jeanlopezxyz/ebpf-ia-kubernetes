apiVersion: tekton.dev/v1
kind: Task
metadata:
  name: helm-dependency-update
  namespace: ebpf-security
  annotations:
    argocd.argoproj.io/sync-wave: "0"
  labels:
    app.kubernetes.io/name: tekton-ci
    app.kubernetes.io/instance: tekton-ci
    app.kubernetes.io/component: task-helm-dependency
    app.kubernetes.io/part-of: ebpf-ai-system
spec:
  description: Updates Helm chart dependencies and generates fresh .tgz files
  workspaces:
    - name: source
      description: Repository source code
  params:
    - name: chart-path
      description: Path to the Helm chart relative to workspace
      default: "."
  results:
    - name: dependencies-updated
      description: Whether dependencies were updated
  steps:
    - name: update-dependencies
      image: alpine/helm:latest
      workingDir: $(workspaces.source.path)
      script: |
        #!/bin/sh
        set -eu
        
        echo "🔧 Updating Helm chart dependencies..."
        
        CHART_PATH="$(params.chart-path)"
        UPDATED="false"
        
        # Find all Chart.yaml files
        find . -name "Chart.yaml" -path "*/helm/charts/*" | while read chart_file; do
          chart_dir=$(dirname "$chart_file")
          
          echo "📊 Processing chart: $chart_dir"
          
          # Check if chart has dependencies
          if grep -q "dependencies:" "$chart_file"; then
            echo "  ├── Found dependencies in $chart_file"
            
            cd "$chart_dir"
            
            # Check if Chart.lock exists and is newer than Chart.yaml
            if [ -f Chart.lock ] && [ Chart.lock -nt Chart.yaml ]; then
              echo "  ├── Dependencies up to date"
            else
              echo "  ├── Updating dependencies..."
              
              # Update dependencies
              helm dependency update
              
              if [ $? -eq 0 ]; then
                echo "  ├── ✅ Dependencies updated successfully"
                UPDATED="true"
              else
                echo "  ├── ❌ Failed to update dependencies"
                exit 1
              fi
            fi
            
            cd - > /dev/null
          else
            echo "  ├── No dependencies found"
          fi
        done
        
        # Return result
        printf "%s" "$UPDATED" > $(results.dependencies-updated.path)
        
        if [ "$UPDATED" = "true" ]; then
          echo "✅ Helm dependencies updated successfully"
        else
          echo "ℹ️  No dependency updates needed"
        fi