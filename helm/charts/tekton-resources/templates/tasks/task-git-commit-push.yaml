apiVersion: tekton.dev/v1
kind: Task
metadata:
  name: git-commit-push
  namespace: ebpf-security
  annotations:
    argocd.argoproj.io/sync-wave: "0"
  labels:
    app.kubernetes.io/name: tekton-ci
    app.kubernetes.io/instance: tekton-ci
    app.kubernetes.io/component: task-git-commit-push
    app.kubernetes.io/part-of: ebpf-ai-system
spec:
  description: Commits and pushes changes to Git repository
  workspaces:
    - name: source
      description: Repository source code
  params:
    - name: commit-message
      description: Commit message
      default: "Auto-update files"
    - name: files-pattern
      description: Pattern of files to add
      default: "."
    - name: git-user-name
      description: Git user name
      default: "tekton-pipeline"
    - name: git-user-email
      description: Git user email
      default: "tekton@pipeline.local"
  results:
    - name: commit-success
      description: Whether commit was successful
    - name: commit-sha
      description: SHA of the commit
  steps:
    - name: commit-and-push
      image: alpine/git
      workingDir: $(workspaces.source.path)
      script: |
        #!/bin/sh
        set -eu
        
        echo "📝 Committing and pushing changes..."
        
        # Configure git
        git config user.name "$(params.git-user-name)"
        git config user.email "$(params.git-user-email)"
        
        # Add files
        echo "📂 Adding files: $(params.files-pattern)"
        git add $(params.files-pattern)
        
        # Check if there are changes to commit
        if git diff --cached --quiet; then
          echo "ℹ️  No changes to commit"
          printf "false" > $(results.commit-success.path)
          printf "" > $(results.commit-sha.path)
          exit 0
        fi
        
        # Commit changes
        echo "💾 Committing changes..."
        git commit -m "$(params.commit-message)

        🤖 Generated with [Claude Code](https://claude.ai/code)
        
        Co-Authored-By: Claude <noreply@anthropic.com>"
        
        if [ $? -eq 0 ]; then
          echo "✅ Commit successful"
          
          # Get commit SHA
          COMMIT_SHA=$(git rev-parse HEAD)
          printf "true" > $(results.commit-success.path)
          printf "%s" "$COMMIT_SHA" > $(results.commit-sha.path)
          
          # Push changes
          echo "🚀 Pushing to remote..."
          git push origin main
          
          if [ $? -eq 0 ]; then
            echo "✅ Push successful: $COMMIT_SHA"
          else
            echo "❌ Push failed"
            exit 1
          fi
        else
          echo "❌ Commit failed"
          printf "false" > $(results.commit-success.path)
          exit 1
        fi