# Prometheus Configuration for eBPF-AI Platform

# Prometheus server configuration
prometheus:
  enabled: true
      
  # Prometheus server configuration  
  server:
    persistentVolume:
      enabled: true
      size: 5Gi  # Increased for longer metric retention
      storageClass: "local-path"
    service:
      type: ClusterIP
      port: 80
    retention: "30d"
    
    # Security context: run as non-root (required by cluster policy)
    securityContext:
      runAsUser: 65534
      runAsGroup: 65534
      runAsNonRoot: true
      fsGroup: 65534
    
    # Environment variables to disable problematic features
    env:
      - name: GOMAXPROCS
        value: "2"
    
    # Runtime args (safe defaults)  
    extraArgs:
      query.max-concurrency: "20"
      query.timeout: "2m"
      query.max-samples: "50000000"
      enable-feature: ""
    
    # Fix reload configuration
    configReloader:
      enabled: true
    reloadStrategy: "http"
    
    # Resource limits to prevent OOM
    resources:
      limits:
        cpu: 1000m
        memory: 2Gi
      requests:
        cpu: 500m
        memory: 1Gi
    
    # Custom scrape configurations for eBPF-AI applications
    extraScrapeConfigs: |
      # eBPF Monitor metrics
      - job_name: 'ebpf-monitor'
        static_configs:
        - targets: ['ebpf-monitor.ebpf-security.svc.cluster.local:8800']
        metrics_path: /metrics
        scrape_interval: 15s
        scrape_timeout: 10s
        honor_labels: true
        
      # ML Detector metrics  
      - job_name: 'ml-detector'
        static_configs:  
        - targets: ['ml-detector.ebpf-security.svc.cluster.local:5000']
        metrics_path: /metrics
        scrape_interval: 15s
        scrape_timeout: 10s
        honor_labels: true
        
      # Container Registry metrics
      - job_name: 'container-registry'
        static_configs:
        - targets: ['registry.registry.svc.cluster.local:5000']
        metrics_path: /metrics
        scrape_interval: 30s
        scrape_timeout: 10s
        honor_labels: true
        
  # Push Gateway for custom metrics
  pushgateway:
    enabled: true
    persistentVolume:
      enabled: false
    service:
      type: ClusterIP
      port: 9091
      
  # Node Exporter for system metrics
  nodeExporter:
    enabled: true
    service:
      type: ClusterIP
      port: 9100
      
  # Kube State Metrics for Kubernetes metrics
  kubeStateMetrics:
    enabled: true
    service:
      port: 8080

# ServiceMonitor for Prometheus Operator compatibility
serviceMonitor:
  enabled: true
  namespace: monitoring
  labels:
    app.kubernetes.io/name: prometheus
    app.kubernetes.io/part-of: ebpf-ai-platform

# AlertManager subchart configuration (exact official structure)
alertmanager:
  enabled: true
  persistence:
    size: 2Gi
    storageClass: "local-path"
  podSecurityContext:
    runAsUser: 65534
    runAsNonRoot: true
    runAsGroup: 65534
    fsGroup: 65534

