name: Build and Deploy eBPF AI

on:
  push:
    branches: [ main ]
    paths:
      - 'applications/**'
      - 'helm/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'applications/**'

env:
  REGISTRY: quay.io
  NAMESPACE: jealopez

jobs:
  build-ml-detector:
    if: contains(github.event.head_commit.message, 'ml-detector') || contains(github.event.head_commit.modified, 'applications/ml-detector')
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Login to Quay.io
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ secrets.QUAY_USERNAME }}
        password: ${{ secrets.QUAY_TOKEN }}
        
    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.NAMESPACE }}/ml-detector
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}
          
    - name: Build and push ML Detector
      uses: docker/build-push-action@v5
      with:
        context: ./applications/ml-detector
        file: ./applications/ml-detector/Dockerfile
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        
  build-ebpf-monitor:
    if: contains(github.event.head_commit.message, 'ebpf-monitor') || contains(github.event.head_commit.modified, 'applications/ebpf-monitor')
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Login to Quay.io
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ secrets.QUAY_USERNAME }}
        password: ${{ secrets.QUAY_TOKEN }}
        
    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.NAMESPACE }}/ebpf-monitor
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}
          
    - name: Build and push eBPF Monitor
      uses: docker/build-push-action@v5
      with:
        context: ./applications/ebpf-monitor
        file: ./applications/ebpf-monitor/Dockerfile
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  trigger-argocd-sync:
    needs: [build-ml-detector, build-ebpf-monitor]
    if: always() && (needs.build-ml-detector.result == 'success' || needs.build-ebpf-monitor.result == 'success')
    runs-on: ubuntu-latest
    
    steps:
    - name: Trigger ArgoCD Sync
      run: |
        echo "ðŸš€ Images built successfully!"
        echo "ArgoCD will automatically detect and deploy the new images"
        echo "Monitor deployment: kubectl get applications -n argocd"