# Simple Tekton Triggers installation via ArgoCD
# This applies the official Tekton Triggers installation in a GitOps way

apiVersion: v1
kind: Namespace
metadata:
  name: tekton-pipelines
  labels:
    app.kubernetes.io/name: tekton-triggers
    app.kubernetes.io/part-of: tekton
---
# This ConfigMap triggers ArgoCD to apply external resources
apiVersion: v1
kind: ConfigMap
metadata:
  name: tekton-triggers-installer
  namespace: tekton-pipelines
  annotations:
    argocd.argoproj.io/hook: PreSync
    argocd.argoproj.io/hook-delete-policy: BeforeHookCreation
data:
  install.sh: |
    #!/bin/bash
    echo "Installing Tekton Triggers via ArgoCD..."
    kubectl apply -f https://storage.googleapis.com/tekton-releases/triggers/latest/release.yaml
    kubectl apply -f https://storage.googleapis.com/tekton-releases/triggers/latest/interceptors.yaml
---
apiVersion: batch/v1
kind: Job
metadata:
  name: tekton-triggers-installer
  namespace: tekton-pipelines
  annotations:
    argocd.argoproj.io/hook: PreSync
    argocd.argoproj.io/hook-delete-policy: BeforeHookCreation
spec:
  template:
    spec:
      serviceAccountName: tekton-installer-sa
      restartPolicy: OnFailure
      containers:
      - name: installer
        image: bitnami/kubectl:latest
        command: ["/bin/bash"]
        args: ["-c", "kubectl apply -f https://storage.googleapis.com/tekton-releases/triggers/latest/release.yaml && kubectl apply -f https://storage.googleapis.com/tekton-releases/triggers/latest/interceptors.yaml"]
      tolerations:
      - operator: Exists
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: tekton-installer-sa
  namespace: tekton-pipelines
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: tekton-installer-admin
subjects:
- kind: ServiceAccount
  name: tekton-installer-sa
  namespace: tekton-pipelines
roleRef:
  kind: ClusterRole
  name: cluster-admin
  apiGroup: rbac.authorization.k8s.io