apiVersion: triggers.tekton.dev/v1beta1
kind: EventListener
metadata:
  name: github-webhook-listener
  namespace: ebpf-security
spec:
  serviceAccountName: tekton-triggers-sa
  triggers:
    - name: github-push-trigger
      interceptors:
        - github:
            secretRef:
              secretName: github-webhook-secret
              secretKey: secretToken
            eventTypes:
              - push
        - cel:
            filter: >
              body.ref == 'refs/heads/main' &&
              has(body.head_commit) &&
              body.head_commit.modified.exists(f, f.startsWith('applications/'))
      bindings:
        - ref: github-push-binding
      template:
        ref: ml-detector-trigger-template
---
apiVersion: triggers.tekton.dev/v1beta1
kind: TriggerBinding
metadata:
  name: github-push-binding
  namespace: ebpf-security
spec:
  params:
    - name: git-revision
      value: $(body.head_commit.id)
    - name: git-repository-url
      value: $(body.repository.clone_url)
    - name: git-repository-name
      value: $(body.repository.name)
    - name: git-ref
      value: $(body.ref)
---
apiVersion: triggers.tekton.dev/v1beta1
kind: TriggerTemplate
metadata:
  name: ml-detector-trigger-template
  namespace: ebpf-security
spec:
  params:
    - name: git-revision
      description: The git revision
      default: main
    - name: git-repository-url
      description: The git repository url
    - name: git-repository-name
      description: The git repository name
    - name: git-ref
      description: The git reference
      default: refs/heads/main
  resourcetemplates:
    - apiVersion: tekton.dev/v1
      kind: PipelineRun
      metadata:
        generateName: ml-detector-webhook-run-
        namespace: ebpf-security
        labels:
          app: ml-detector
          trigger: github-webhook
      spec:
        pipelineRef:
          name: application-build-ci
        taskRunTemplate:
          serviceAccountName: tekton-builder-sa  # Fixed syntax
        params:
          - name: git-url
            value: $(tt.params.git-repository-url)
          - name: git-revision
            value: $(tt.params.git-revision)
          - name: image-registry
            value: quay.io/jealopez
          - name: image-name
            value: ml-detector
          - name: dockerfile-path
            value: applications/ml-detector/Dockerfile
          - name: context-path
            value: applications/ml-detector
          - name: argo-app-name
            value: ebpf-ai
        workspaces:
          - name: shared-data
            volumeClaimTemplate:
              spec:
                accessModes:
                  - ReadWriteOnce
                resources:
                  requests:
                    storage: 1Gi
                storageClassName: local-path
          - name: dockerconfig
            secret:
              secretName: quay-io-secret
---
apiVersion: v1
kind: Secret
metadata:
  name: github-webhook-secret
  namespace: ebpf-security
type: Opaque
stringData:
  secretToken: "webhook-secret-token-2024"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: tekton-triggers-sa
  namespace: ebpf-security
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: tekton-triggers-role
  namespace: ebpf-security
rules:
  - apiGroups: ["triggers.tekton.dev"]
    resources: ["eventlisteners", "triggerbindings", "triggertemplates"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["tekton.dev"]
    resources: ["pipelineruns", "pipelines", "tasks", "taskruns"]
    verbs: ["create", "get", "list", "watch"]
  - apiGroups: [""]
    resources: ["configmaps", "secrets", "events"]
    verbs: ["get", "list", "watch", "create", "update", "patch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: tekton-triggers-rolebinding
  namespace: ebpf-security
subjects:
  - kind: ServiceAccount
    name: tekton-triggers-sa
    namespace: ebpf-security
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: tekton-triggers-role